Работает? Отлично. Теперь можно настроить отображение.
1) Откройте файл с форматом отчета. Это текстовый файл в формате YAML.
   Находится по пути default.conf/report.yml.
   Каждый элемент в нем это новая статистика. Статистики бывают двух
   видов: счетчик и распределение
2а)Счетчик. Представляет собой число строк, подходящих под заданные условия.
   То есть, после того, как логи были собраны вместе, каждая строка тестируется
   на подхождение под эти условия, и счетчик увеличивается соответственно.
2б)Распределение. Представляет собой многоуровневый хэш, где ключами являются 
   различные значения одного поля, а значениями - различные значения другого поля и т.д.
   Проще понять на примере. Например, распределение по кодам возвращаемых ошибок:
   {
	200 => 1000,
	404 => 50
   }
   Или распределение по ip и порту, на который он пытался зайти
   {
	192.168.0.1 =>
	{
		22 => 2,
		80 => 10,
		443 => 2,
		4501 => 4
	}
	127.0.0.1 =>
	{
		4567 => 100,
		8080 => 90
	}
   }
3а)Формат задания параметров счетчика:
- Counter:"Описание"
  :server: "имя сервера"  # опциональное поле, означает считать только строки с этого сервера
  :service: "имя сервиса" # опциональное поле, означает считать только строки от такого сервиса
  :type: "описание типа события" # опциональное поле. Тип события описан в шаблонах как строка. 
  :except:  # опциональное поле. Если в строке встречается поле с данным значением, то она игнорируется.
	    # нужно, чтобы отсеивать события типа автоматической проверки: если имя пользователя равно autocheck
  - "имя поля1": или :имя_поля1: "значение поля 1" 
  - "имя поля2": или :имя_поля2: "значение поля 2"
  ...
  "имя поля 1":"значение 1" # 
  "имя поля 2":"значение 2" # Помимо заданных изначально полей :server, :service, :type можно фильтровать
  ...			    # и по заданным пользователем полям. Нужно указать имя поля и требуемое значение.
3б)Формат задания распределения:
   Уже знакомые :server, :service, :type, :except
   :top: <число> # Сколько результатов выводить
   :keys:	 		# Обязательное поле! 
   - "поле 1" или :поле1	# поле в кавычках означает заданное пользователем
   - "поле 2" или :поле2	# поле, записанное через двоеточие означает predefined, то есть одно из 
   ...				# :server, :service, :type
   :sort_type: "total" или "distinct"	# Возьмем распределение ip - порт из примера. Явно видно, что 192.168.0.1
					# заходил на 4 порта, в то время как 127.0.0.1 только на 2. Разные виды
					# сортировки указывают то, что надо ранжировать результаты либо по общему
					# числу заходов, либо по количеству различных. Это бывает полезно, например
					# если идет перебор портов с айпи, тогда он всплывет вверх, даже если
					# общее число запросов с него было невелико.
